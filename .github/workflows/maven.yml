# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Nuxeo MT image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        server-id: maven-internal
        server-username: MAVEN_USERNAME
        server-password: MAVEN_TOKEN # env variable for token  
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven (no tests)
      run: mvn -DskipTests clean install -f plugins/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1    
    - name: Login to Nexus Docker repository
      uses: docker/login-action@v1
      with:
        registry: docker-private.packages.nuxeo.com
        username: ${{ secrets.NEXUS_USERNAME }}
        password: ${{ secrets.NEXUS_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: false
        context: .
        file: ./Dockerfile-gh
        build-args: CLID=${{ secrets.CLID }}
        tags: tiry/mt-test:latest        
